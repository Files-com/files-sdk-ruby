# Actions

All File and Login actions on Files.com are recorded and can be queried via our History API.


## The Action object

> Example Action Object

```json
{
  "id": 1,
  "path": "path",
  "when": "2000-01-01T01:00:00Z",
  "destination": "/to_path",
  "display": "Actual text of the action here.",
  "ip": "192.283.128.182",
  "source": "/from_path",
  "targets": [

  ],
  "user_id": 1,
  "username": "user",
  "action": "create",
  "failure_type": "none",
  "interface": "web"
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<action>
  <id type="integer">1</id>
  <path>path</path>
  <when>2000-01-01T01:00:00Z</when>
  <destination>/to_path</destination>
  <display>Actual text of the action here.</display>
  <ip>192.283.128.182</ip>
  <source>/from_path</source>
  <targets type="array"/>
  <user_id type="integer">1</user_id>
  <username>user</username>
  <action>create</action>
  <failure_type>none</failure_type>
  <interface>web</interface>
</action>

```

Attribute | Description
--------- | -----------
  id *int64* | Action ID 
  path *string* | Path This must be slash-delimited, but it must neither start nor end with a slash. Maximum of 5000 characters. 
  when *date-time* | Action occurrence date/time 
  destination *string* | The destination path for this action, if applicable 
  display *string* | Friendly displayed output 
  ip *string* | IP Address that performed this action 
  source *string* | The source path for this action, if applicable 
  targets *array* | Targets 
  user_id *int64* | User ID 
  username *string* | Username 
  action *string* | Type of action <div>Possible values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`</div>
  failure_type *string* | Failure type.  If action was a user login or session failure, why did it fail? <div>Possible values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`</div>
  interface *string* | Interface on which this action occurred. <div>Possible values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`</div>

## List history for specific file


> Example Request

```shell--json
curl "https://app.files.com/api/rest/v1/history/files(/*path).json?display=Actual text of the action here.&page=1&per_page=1&action=create" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl "https://app.files.com/api/rest/v1/history/files(/*path).xml?display=Actual text of the action here.&page=1&per_page=1&action=create" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::History.list_for_file(path, 
  display: "Actual text of the action here.", 
  page: 1, 
  per_page: 1, 
  action: "create"
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\History::listForFile($path, array(
  'display' => "Actual text of the action here.", 
  'page' => 1, 
  'per_page' => 1, 
  'action' => "create"
));
```

> Example Response

```json
[
  {
    "id": 1,
    "path": "path",
    "when": "2000-01-01T01:00:00Z",
    "destination": "/to_path",
    "display": "Actual text of the action here.",
    "ip": "192.283.128.182",
    "source": "/from_path",
    "targets": [

    ],
    "user_id": 1,
    "username": "user",
    "action": "create",
    "failure_type": "none",
    "interface": "web"
  }
]
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<actions type="array">
  <action>
    <id type="integer">1</id>
    <path>path</path>
    <when>2000-01-01T01:00:00Z</when>
    <destination>/to_path</destination>
    <display>Actual text of the action here.</display>
    <ip>192.283.128.182</ip>
    <source>/from_path</source>
    <targets type="array"/>
    <user_id type="integer">1</user_id>
    <username>user</username>
    <action>create</action>
    <failure_type>none</failure_type>
    <interface>web</interface>
  </action>
</actions>

```


### HTTPS Request

`GET /history/files(/*path)`

### Authentication Required

Available to all authenticated keys or sessions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
start_at *string*  | Leave blank or set to a date/time to filter earlier entries. 
end_at *string*  | Leave blank or set to a date/time to filter later entries. 
display *string*  | Display format. Leave blank or set to `full` or `parent`. 
page *int64*  | Current page number. 
per_page *int64*  | Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended). 
action *string*  | Deprecated: If set to `count` returns a count of matching records rather than the records themselves. 
path *string* **Required** | Path to operate on. 
## List history for specific folder


> Example Request

```shell--json
curl "https://app.files.com/api/rest/v1/history/folders(/*path).json?display=Actual text of the action here.&page=1&per_page=1&action=create" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl "https://app.files.com/api/rest/v1/history/folders(/*path).xml?display=Actual text of the action here.&page=1&per_page=1&action=create" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::History.list_for_folder(path, 
  display: "Actual text of the action here.", 
  page: 1, 
  per_page: 1, 
  action: "create"
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\History::listForFolder($path, array(
  'display' => "Actual text of the action here.", 
  'page' => 1, 
  'per_page' => 1, 
  'action' => "create"
));
```

> Example Response

```json
[
  {
    "id": 1,
    "path": "path",
    "when": "2000-01-01T01:00:00Z",
    "destination": "/to_path",
    "display": "Actual text of the action here.",
    "ip": "192.283.128.182",
    "source": "/from_path",
    "targets": [

    ],
    "user_id": 1,
    "username": "user",
    "action": "create",
    "failure_type": "none",
    "interface": "web"
  }
]
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<actions type="array">
  <action>
    <id type="integer">1</id>
    <path>path</path>
    <when>2000-01-01T01:00:00Z</when>
    <destination>/to_path</destination>
    <display>Actual text of the action here.</display>
    <ip>192.283.128.182</ip>
    <source>/from_path</source>
    <targets type="array"/>
    <user_id type="integer">1</user_id>
    <username>user</username>
    <action>create</action>
    <failure_type>none</failure_type>
    <interface>web</interface>
  </action>
</actions>

```


### HTTPS Request

`GET /history/folders(/*path)`

### Authentication Required

Available to all authenticated keys or sessions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
start_at *string*  | Leave blank or set to a date/time to filter earlier entries. 
end_at *string*  | Leave blank or set to a date/time to filter later entries. 
display *string*  | Display format. Leave blank or set to `full` or `parent`. 
page *int64*  | Current page number. 
per_page *int64*  | Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended). 
action *string*  | Deprecated: If set to `count` returns a count of matching records rather than the records themselves. 
path *string* **Required** | Path to operate on. 
## List history for specific user


> Example Request

```shell--json
curl "https://app.files.com/api/rest/v1/history/users/{user_id}.json?display=Actual text of the action here.&page=1&per_page=1&action=create" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl "https://app.files.com/api/rest/v1/history/users/{user_id}.xml?display=Actual text of the action here.&page=1&per_page=1&action=create" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::History.list_for_user(user_id, 
  display: "Actual text of the action here.", 
  page: 1, 
  per_page: 1, 
  action: "create"
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\History::listForUser($user_id, array(
  'display' => "Actual text of the action here.", 
  'page' => 1, 
  'per_page' => 1, 
  'action' => "create"
));
```

> Example Response

```json
[
  {
    "id": 1,
    "path": "path",
    "when": "2000-01-01T01:00:00Z",
    "destination": "/to_path",
    "display": "Actual text of the action here.",
    "ip": "192.283.128.182",
    "source": "/from_path",
    "targets": [

    ],
    "user_id": 1,
    "username": "user",
    "action": "create",
    "failure_type": "none",
    "interface": "web"
  }
]
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<actions type="array">
  <action>
    <id type="integer">1</id>
    <path>path</path>
    <when>2000-01-01T01:00:00Z</when>
    <destination>/to_path</destination>
    <display>Actual text of the action here.</display>
    <ip>192.283.128.182</ip>
    <source>/from_path</source>
    <targets type="array"/>
    <user_id type="integer">1</user_id>
    <username>user</username>
    <action>create</action>
    <failure_type>none</failure_type>
    <interface>web</interface>
  </action>
</actions>

```


### HTTPS Request

`GET /history/users/{user_id}`

### Authentication Required

Requires either a Site-Wide API key or User API key or session from a User with Site Admin permissions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
start_at *string*  | Leave blank or set to a date/time to filter earlier entries. 
end_at *string*  | Leave blank or set to a date/time to filter later entries. 
display *string*  | Display format. Leave blank or set to `full` or `parent`. 
page *int64*  | Current page number. 
per_page *int64*  | Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended). 
action *string*  | Deprecated: If set to `count` returns a count of matching records rather than the records themselves. 
user_id *int64* **Required** | User ID. 
## List site login history


> Example Request

```shell--json
curl "https://app.files.com/api/rest/v1/history/login.json?display=Actual text of the action here.&page=1&per_page=1&action=create" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl "https://app.files.com/api/rest/v1/history/login.xml?display=Actual text of the action here.&page=1&per_page=1&action=create" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::History.list_logins(
  display: "Actual text of the action here.", 
  page: 1, 
  per_page: 1, 
  action: "create"
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\History::listLogins(array(
  'display' => "Actual text of the action here.", 
  'page' => 1, 
  'per_page' => 1, 
  'action' => "create"
));
```

> Example Response

```json
[
  {
    "id": 1,
    "path": "path",
    "when": "2000-01-01T01:00:00Z",
    "destination": "/to_path",
    "display": "Actual text of the action here.",
    "ip": "192.283.128.182",
    "source": "/from_path",
    "targets": [

    ],
    "user_id": 1,
    "username": "user",
    "action": "create",
    "failure_type": "none",
    "interface": "web"
  }
]
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<actions type="array">
  <action>
    <id type="integer">1</id>
    <path>path</path>
    <when>2000-01-01T01:00:00Z</when>
    <destination>/to_path</destination>
    <display>Actual text of the action here.</display>
    <ip>192.283.128.182</ip>
    <source>/from_path</source>
    <targets type="array"/>
    <user_id type="integer">1</user_id>
    <username>user</username>
    <action>create</action>
    <failure_type>none</failure_type>
    <interface>web</interface>
  </action>
</actions>

```


### HTTPS Request

`GET /history/login`

### Authentication Required

Requires either a Site-Wide API key or User API key or session from a User with Site Admin permissions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
start_at *string*  | Leave blank or set to a date/time to filter earlier entries. 
end_at *string*  | Leave blank or set to a date/time to filter later entries. 
display *string*  | Display format. Leave blank or set to `full` or `parent`. 
page *int64*  | Current page number. 
per_page *int64*  | Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended). 
action *string*  | Deprecated: If set to `count` returns a count of matching records rather than the records themselves. 
## List site full action history


> Example Request

```shell--json
curl "https://app.files.com/api/rest/v1/history.json?display=Actual text of the action here.&page=1&per_page=1&action=create" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl "https://app.files.com/api/rest/v1/history.xml?display=Actual text of the action here.&page=1&per_page=1&action=create" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::History.list(
  display: "Actual text of the action here.", 
  page: 1, 
  per_page: 1, 
  action: "create"
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\History::list(array(
  'display' => "Actual text of the action here.", 
  'page' => 1, 
  'per_page' => 1, 
  'action' => "create"
));
```

> Example Response

```json
[
  {
    "id": 1,
    "path": "path",
    "when": "2000-01-01T01:00:00Z",
    "destination": "/to_path",
    "display": "Actual text of the action here.",
    "ip": "192.283.128.182",
    "source": "/from_path",
    "targets": [

    ],
    "user_id": 1,
    "username": "user",
    "action": "create",
    "failure_type": "none",
    "interface": "web"
  }
]
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<actions type="array">
  <action>
    <id type="integer">1</id>
    <path>path</path>
    <when>2000-01-01T01:00:00Z</when>
    <destination>/to_path</destination>
    <display>Actual text of the action here.</display>
    <ip>192.283.128.182</ip>
    <source>/from_path</source>
    <targets type="array"/>
    <user_id type="integer">1</user_id>
    <username>user</username>
    <action>create</action>
    <failure_type>none</failure_type>
    <interface>web</interface>
  </action>
</actions>

```


### HTTPS Request

`GET /history`

### Authentication Required

Requires either a Site-Wide API key or User API key or session from a User with Site Admin permissions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
start_at *string*  | Leave blank or set to a date/time to filter earlier entries. 
end_at *string*  | Leave blank or set to a date/time to filter later entries. 
display *string*  | Display format. Leave blank or set to `full` or `parent`. 
page *int64*  | Current page number. 
per_page *int64*  | Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended). 
action *string*  | Deprecated: If set to `count` returns a count of matching records rather than the records themselves. 

