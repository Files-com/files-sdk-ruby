# Api Keys

API Keys allow programmatic access to your Site.
API keys confer all the permissions of the user who owns them.
If an API key is created without a user owner, it is considered a site-wide API key, which has full permissions to do anything on the Site.


## The ApiKey object

> Example ApiKey Object

```json
{
  "id": 1,
  "descriptive_label": "Site-wide API key for https://site.files.com/ (key ID #1)",
  "created_at": "2000-01-01T01:00:00Z",
  "expires_at": "2000-01-01T01:00:00Z",
  "key": "[key]",
  "last_use_at": "2000-01-01T01:00:00Z",
  "name": "My Main API Key",
  "permission_set": "full",
  "platform": "win32",
  "user_id": 1
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<api-key>
  <id type="integer">1</id>
  <descriptive_label>Site-wide API key for https://site.files.com/ (key ID #1)</descriptive_label>
  <created_at>2000-01-01T01:00:00Z</created_at>
  <expires_at>2000-01-01T01:00:00Z</expires_at>
  <key>[key]</key>
  <last_use_at>2000-01-01T01:00:00Z</last_use_at>
  <name>My Main API Key</name>
  <permission_set>full</permission_set>
  <platform>win32</platform>
  <user_id type="integer">1</user_id>
</api-key>

```

Attribute | Description
--------- | -----------
  id *int64* | API Key ID 
  descriptive_label *string* | Unique label that describes this API key.  Useful for external systems where you may have API keys from multiple accounts and want a human-readable label for each key. 
  created_at *date-time* | Time which API Key was created 
  expires_at *date-time* | API Key expiration date 
  key *string* | API Key actual key string 
  last_use_at *date-time* | API Key last used - note this value is only updated once per 3 hour period, so the 'actual' time of last use may be up to 3 hours later than this timestamp. 
  name *string* | Internal name for the API Key.  For your use. 
  permission_set *string* | Permissions for this API Key.  Keys with the `desktop_app` permission set only have the ability to do the functions provided in our Desktop App (File and Share Link operations.)  We hope to offer additional permission sets in the future, such as for a Site Admin to give a key with no administrator privileges.  If you have ideas for permission sets, please let us know. <div>Possible values: `none`, `full`, `desktop_app`, `sync_app`</div>
  platform *string* | If this API key represents a Desktop app, what platform was it created on? 
  user_id *int64* | User ID for the owner of this API Key.  May be blank for Site-wide API Keys. 

## List Api Keys


> Example Request

```shell--json
curl "https://app.files.com/api/rest/v1/api_keys.json?user_id=1&page=1&per_page=1" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl "https://app.files.com/api/rest/v1/api_keys.xml?user_id=1&page=1&per_page=1" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::ApiKey.list(
  user_id: 1, 
  page: 1, 
  per_page: 1
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\ApiKey::list(array(
  'user_id' => 1, 
  'page' => 1, 
  'per_page' => 1
));
```

> Example Response

```json
[
  {
    "id": 1,
    "descriptive_label": "Site-wide API key for https://site.files.com/ (key ID #1)",
    "created_at": "2000-01-01T01:00:00Z",
    "expires_at": "2000-01-01T01:00:00Z",
    "key": "[key]",
    "last_use_at": "2000-01-01T01:00:00Z",
    "name": "My Main API Key",
    "permission_set": "full",
    "platform": "win32",
    "user_id": 1
  }
]
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<api-keys type="array">
  <api-key>
    <id type="integer">1</id>
    <descriptive_label>Site-wide API key for https://site.files.com/ (key ID #1)</descriptive_label>
    <created_at>2000-01-01T01:00:00Z</created_at>
    <expires_at>2000-01-01T01:00:00Z</expires_at>
    <key>[key]</key>
    <last_use_at>2000-01-01T01:00:00Z</last_use_at>
    <name>My Main API Key</name>
    <permission_set>full</permission_set>
    <platform>win32</platform>
    <user_id type="integer">1</user_id>
  </api-key>
</api-keys>

```


### HTTPS Request

`GET /api_keys`

### Authentication Required

Not available to user API keys or sessions from users that are marked as Shared/Bot users.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
user_id *int64*  | User ID.  Provide a value of `0` to operate the current session's user. 
page *int64*  | Current page number. 
per_page *int64*  | Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended). 
action *string*  | Deprecated: If set to `count` returns a count of matching records rather than the records themselves. 
## Show information about current API key.  (Requires current API connection to be using an API key.)


> Example Request

```shell--json
curl https://app.files.com/api/rest/v1/api_key.json \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl https://app.files.com/api/rest/v1/api_key.xml \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::ApiKey.find_current
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\ApiKey::findCurrent();
```

> Example Response

```json
{
  "id": 1,
  "descriptive_label": "Site-wide API key for https://site.files.com/ (key ID #1)",
  "created_at": "2000-01-01T01:00:00Z",
  "expires_at": "2000-01-01T01:00:00Z",
  "key": "[key]",
  "last_use_at": "2000-01-01T01:00:00Z",
  "name": "My Main API Key",
  "permission_set": "full",
  "platform": "win32",
  "user_id": 1
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<api-key>
  <id type="integer">1</id>
  <descriptive_label>Site-wide API key for https://site.files.com/ (key ID #1)</descriptive_label>
  <created_at>2000-01-01T01:00:00Z</created_at>
  <expires_at>2000-01-01T01:00:00Z</expires_at>
  <key>[key]</key>
  <last_use_at>2000-01-01T01:00:00Z</last_use_at>
  <name>My Main API Key</name>
  <permission_set>full</permission_set>
  <platform>win32</platform>
  <user_id type="integer">1</user_id>
</api-key>

```


### HTTPS Request

`GET /api_key`

### Authentication Required

Available to all authenticated keys or sessions.


## Show Api Key


> Example Request

```shell--json
curl https://app.files.com/api/rest/v1/api_keys/{id}.json \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl https://app.files.com/api/rest/v1/api_keys/{id}.xml \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::ApiKey.find(id)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\ApiKey::find($id);
```

> Example Response

```json
{
  "id": 1,
  "descriptive_label": "Site-wide API key for https://site.files.com/ (key ID #1)",
  "created_at": "2000-01-01T01:00:00Z",
  "expires_at": "2000-01-01T01:00:00Z",
  "key": "[key]",
  "last_use_at": "2000-01-01T01:00:00Z",
  "name": "My Main API Key",
  "permission_set": "full",
  "platform": "win32",
  "user_id": 1
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<api-key>
  <id type="integer">1</id>
  <descriptive_label>Site-wide API key for https://site.files.com/ (key ID #1)</descriptive_label>
  <created_at>2000-01-01T01:00:00Z</created_at>
  <expires_at>2000-01-01T01:00:00Z</expires_at>
  <key>[key]</key>
  <last_use_at>2000-01-01T01:00:00Z</last_use_at>
  <name>My Main API Key</name>
  <permission_set>full</permission_set>
  <platform>win32</platform>
  <user_id type="integer">1</user_id>
</api-key>

```


### HTTPS Request

`GET /api_keys/{id}`

### Authentication Required

Not available to user API keys or sessions from users that are marked as Shared/Bot users.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
id *int64* **Required** | Api Key ID. 
## Create Api Key


> Example Request

```shell--json
curl https://app.files.com/api/rest/v1/api_keys.json \
  -X POST \
  -H 'Content-Type: application/json' \
  -d '{"user_id":1,"name":"My Key","permission_set":"full","expires_at":"2000-01-01T01:00:00Z"}' \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl https://app.files.com/api/rest/v1/api_keys.xml \
  -X POST \
  -H 'Content-Type: application/xml' \
  -d '<api-key>
       <user_id type="integer">1</user_id>
       <name>My Key</name>
       <permission_set>full</permission_set>
       <expires_at>2000-01-01T01:00:00Z</expires_at>
     </api-key>'
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::ApiKey.create(
  user_id: 1, 
  name: "My Key", 
  permission_set: "full", 
  expires_at: "2000-01-01T01:00:00Z"
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\ApiKey::create(array(
  'user_id' => 1, 
  'name' => "My Key", 
  'permission_set' => "full", 
  'expires_at' => "2000-01-01T01:00:00Z"
));
```

> Example Response

```json
{
  "id": 1,
  "descriptive_label": "Site-wide API key for https://site.files.com/ (key ID #1)",
  "created_at": "2000-01-01T01:00:00Z",
  "expires_at": "2000-01-01T01:00:00Z",
  "key": "[key]",
  "last_use_at": "2000-01-01T01:00:00Z",
  "name": "My Main API Key",
  "permission_set": "full",
  "platform": "win32",
  "user_id": 1
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<api-key>
  <id type="integer">1</id>
  <descriptive_label>Site-wide API key for https://site.files.com/ (key ID #1)</descriptive_label>
  <created_at>2000-01-01T01:00:00Z</created_at>
  <expires_at>2000-01-01T01:00:00Z</expires_at>
  <key>[key]</key>
  <last_use_at>2000-01-01T01:00:00Z</last_use_at>
  <name>My Main API Key</name>
  <permission_set>full</permission_set>
  <platform>win32</platform>
  <user_id type="integer">1</user_id>
</api-key>

```


### HTTPS Request

`POST /api_keys`

### Authentication Required

Available to all authenticated keys or sessions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
user_id *int64*  | User ID.  Provide a value of `0` to operate the current session's user. 
name *string*  | Internal name for key.  For your reference only. 
permission_set *string*  | Leave blank, or set to 'desktop_app' to restrict the key to only desktop app functions. 
expires_at *string*  | Have the key expire at this date/time. 
## Update current API key.  (Requires current API connection to be using an API key.)


> Example Request

```shell--json
curl https://app.files.com/api/rest/v1/api_key.json \
  -X PATCH \
  -H 'Content-Type: application/json' \
  -d '{"name":"My Key","permission_set":"full","expires_at":"2000-01-01T01:00:00Z"}' \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl https://app.files.com/api/rest/v1/api_key.xml \
  -X PATCH \
  -H 'Content-Type: application/xml' \
  -d '<api-key>
       <name>My Key</name>
       <permission_set>full</permission_set>
       <expires_at>2000-01-01T01:00:00Z</expires_at>
     </api-key>'
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::ApiKey.update_current(
  name: "My Key", 
  permission_set: "full", 
  expires_at: "2000-01-01T01:00:00Z"
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\ApiKey::updateCurrent(array(
  'name' => "My Key", 
  'permission_set' => "full", 
  'expires_at' => "2000-01-01T01:00:00Z"
));
```

> Example Response

```json
{
  "id": 1,
  "descriptive_label": "Site-wide API key for https://site.files.com/ (key ID #1)",
  "created_at": "2000-01-01T01:00:00Z",
  "expires_at": "2000-01-01T01:00:00Z",
  "key": "[key]",
  "last_use_at": "2000-01-01T01:00:00Z",
  "name": "My Main API Key",
  "permission_set": "full",
  "platform": "win32",
  "user_id": 1
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<api-key>
  <id type="integer">1</id>
  <descriptive_label>Site-wide API key for https://site.files.com/ (key ID #1)</descriptive_label>
  <created_at>2000-01-01T01:00:00Z</created_at>
  <expires_at>2000-01-01T01:00:00Z</expires_at>
  <key>[key]</key>
  <last_use_at>2000-01-01T01:00:00Z</last_use_at>
  <name>My Main API Key</name>
  <permission_set>full</permission_set>
  <platform>win32</platform>
  <user_id type="integer">1</user_id>
</api-key>

```


### HTTPS Request

`PATCH /api_key`

### Authentication Required

Available to all authenticated keys or sessions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
name *string*  | Internal name for key.  For your reference only. 
permission_set *string*  | Leave blank, or set to `desktop_app` to restrict the key to only desktop app functions. 
expires_at *string*  | Have the key expire at this date/time. 
## Update Api Key


> Example Request

```shell--json
curl https://app.files.com/api/rest/v1/api_keys/{id}.json \
  -X PATCH \
  -H 'Content-Type: application/json' \
  -d '{"name":"My Key","permission_set":"full","expires_at":"2000-01-01T01:00:00Z"}' \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl https://app.files.com/api/rest/v1/api_keys/{id}.xml \
  -X PATCH \
  -H 'Content-Type: application/xml' \
  -d '<api-key>
       <name>My Key</name>
       <permission_set>full</permission_set>
       <expires_at>2000-01-01T01:00:00Z</expires_at>
     </api-key>'
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

api_key = Files::ApiKey.find(id)
api_key.update(
  name: "My Key",
  permission_set: "full",
  expires_at: "2000-01-01T01:00:00Z"
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

$api_key = \Files\ApiKey->find(1);
$api_key->update(array(
  'name' => "My Key", 
  'permission_set' => "full", 
  'expires_at' => "2000-01-01T01:00:00Z"
));
```

> Example Response

```json
{
  "id": 1,
  "descriptive_label": "Site-wide API key for https://site.files.com/ (key ID #1)",
  "created_at": "2000-01-01T01:00:00Z",
  "expires_at": "2000-01-01T01:00:00Z",
  "key": "[key]",
  "last_use_at": "2000-01-01T01:00:00Z",
  "name": "My Main API Key",
  "permission_set": "full",
  "platform": "win32",
  "user_id": 1
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<api-key>
  <id type="integer">1</id>
  <descriptive_label>Site-wide API key for https://site.files.com/ (key ID #1)</descriptive_label>
  <created_at>2000-01-01T01:00:00Z</created_at>
  <expires_at>2000-01-01T01:00:00Z</expires_at>
  <key>[key]</key>
  <last_use_at>2000-01-01T01:00:00Z</last_use_at>
  <name>My Main API Key</name>
  <permission_set>full</permission_set>
  <platform>win32</platform>
  <user_id type="integer">1</user_id>
</api-key>

```


### HTTPS Request

`PATCH /api_keys/{id}`

### Authentication Required

Not available to user API keys or sessions from users that are marked as Shared/Bot users.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
id *int64* **Required** | Api Key ID. 
name *string*  | Internal name for key.  For your reference only. 
permission_set *string*  | Leave blank, or set to 'desktop_app' to restrict the key to only desktop app functions. 
expires_at *string*  | Have the key expire at this date/time. 
## Delete current API key.  (Requires current API connection to be using an API key.)


> Example Request

```shell--json
curl https://app.files.com/api/rest/v1/api_key.json \
  -X DELETE \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl https://app.files.com/api/rest/v1/api_key.xml \
  -X DELETE \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::ApiKey.delete_current
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\ApiKey::deleteCurrent();
```

> Example Response

```json
No response.
```

```xml
No response.
```


### HTTPS Request

`DELETE /api_key`

### Authentication Required

Available to all authenticated keys or sessions.


## Delete Api Key


> Example Request

```shell--json
curl https://app.files.com/api/rest/v1/api_keys/{id}.json \
  -X DELETE \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl https://app.files.com/api/rest/v1/api_keys/{id}.xml \
  -X DELETE \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

api_key = Files::ApiKey.find(id)
api_key.delete
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

$api_key = \Files\ApiKey->find(1);
$api_key->delete();
```

> Example Response

```json
No response.
```

```xml
No response.
```


### HTTPS Request

`DELETE /api_keys/{id}`

### Authentication Required

Not available to user API keys or sessions from users that are marked as Shared/Bot users.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
id *int64* **Required** | Api Key ID. 

