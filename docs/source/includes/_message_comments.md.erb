# Message Comments

A message comment represents a comment made by a user on a message.


## The MessageComment object

> Example MessageComment Object

```json
{
  "id": 1,
  "body": "What a great idea, thank you!",
  "reactions": [

  ]
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<message-comment>
  <id type="integer">1</id>
  <body>What a great idea, thank you!</body>
  <reactions type="array"/>
</message-comment>

```

Attribute | Description
--------- | -----------
  id *int64* | Message Comment ID 
  body *string* | Comment body. 
  reactions *array* | Reactions to this comment. 
  user_id *int64* | User ID.  Provide a value of `0` to operate the current session's user. 

## List Message Comments


> Example Request

```shell--json
curl "https://app.files.com/api/rest/v1/message_comments.json?user_id=1&page=1&per_page=1&message_id=1" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl "https://app.files.com/api/rest/v1/message_comments.xml?user_id=1&page=1&per_page=1&message_id=1" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::MessageComment.list(
  user_id: 1, 
  page: 1, 
  per_page: 1, 
  message_id: 1
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\MessageComment::list(array(
  'user_id' => 1, 
  'page' => 1, 
  'per_page' => 1, 
  'message_id' => 1
));
```

> Example Response

```json
[
  {
    "id": 1,
    "body": "What a great idea, thank you!",
    "reactions": [

    ]
  }
]
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<message-comments type="array">
  <message-comment>
    <id type="integer">1</id>
    <body>What a great idea, thank you!</body>
    <reactions type="array"/>
  </message-comment>
</message-comments>

```


### HTTPS Request

`GET /message_comments`

### Authentication Required

Available to all authenticated keys or sessions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
user_id *int64*  | User ID.  Provide a value of `0` to operate the current session's user. 
page *int64*  | Current page number. 
per_page *int64*  | Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended). 
action *string*  | Deprecated: If set to `count` returns a count of matching records rather than the records themselves. 
message_id *int64* **Required** | Message comment to return comments for. 
## Show Message Comment


> Example Request

```shell--json
curl https://app.files.com/api/rest/v1/message_comments/{id}.json \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl https://app.files.com/api/rest/v1/message_comments/{id}.xml \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::MessageComment.find(id)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\MessageComment::find($id);
```

> Example Response

```json
{
  "id": 1,
  "body": "What a great idea, thank you!",
  "reactions": [

  ]
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<message-comment>
  <id type="integer">1</id>
  <body>What a great idea, thank you!</body>
  <reactions type="array"/>
</message-comment>

```


### HTTPS Request

`GET /message_comments/{id}`

### Authentication Required

Available to all authenticated keys or sessions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
id *int64* **Required** | Message Comment ID. 
## Create Message Comment


> Example Request

```shell--json
curl https://app.files.com/api/rest/v1/message_comments.json \
  -X POST \
  -H 'Content-Type: application/json' \
  -d '{"user_id":1,"body":"body"}' \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl https://app.files.com/api/rest/v1/message_comments.xml \
  -X POST \
  -H 'Content-Type: application/xml' \
  -d '<message-comment>
       <user_id type="integer">1</user_id>
       <body>body</body>
     </message-comment>'
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::MessageComment.create(
  user_id: 1, 
  body: "body"
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\MessageComment::create(array(
  'user_id' => 1, 
  'body' => "body"
));
```

> Example Response

```json
{
  "id": 1,
  "body": "What a great idea, thank you!",
  "reactions": [

  ]
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<message-comment>
  <id type="integer">1</id>
  <body>What a great idea, thank you!</body>
  <reactions type="array"/>
</message-comment>

```


### HTTPS Request

`POST /message_comments`

### Authentication Required

Available to all authenticated keys or sessions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
user_id *int64*  | User ID.  Provide a value of `0` to operate the current session's user. 
body *string* **Required** | Comment body. 
## Update Message Comment


> Example Request

```shell--json
curl https://app.files.com/api/rest/v1/message_comments/{id}.json \
  -X PATCH \
  -H 'Content-Type: application/json' \
  -d '{"body":"body"}' \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl https://app.files.com/api/rest/v1/message_comments/{id}.xml \
  -X PATCH \
  -H 'Content-Type: application/xml' \
  -d '<message-comment>
       <body>body</body>
     </message-comment>'
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

message_comment = Files::MessageComment.find(id)
message_comment.update(
  body: "body"
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

$message_comment = \Files\MessageComment->find(1);
$message_comment->update(array(
  'body' => "body"
));
```

> Example Response

```json
{
  "id": 1,
  "body": "What a great idea, thank you!",
  "reactions": [

  ]
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<message-comment>
  <id type="integer">1</id>
  <body>What a great idea, thank you!</body>
  <reactions type="array"/>
</message-comment>

```


### HTTPS Request

`PATCH /message_comments/{id}`

### Authentication Required

Available to all authenticated keys or sessions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
id *int64* **Required** | Message Comment ID. 
body *string* **Required** | Comment body. 
## Delete Message Comment


> Example Request

```shell--json
curl https://app.files.com/api/rest/v1/message_comments/{id}.json \
  -X DELETE \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl https://app.files.com/api/rest/v1/message_comments/{id}.xml \
  -X DELETE \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

message_comment = Files::MessageComment.find(id)
message_comment.delete
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

$message_comment = \Files\MessageComment->find(1);
$message_comment->delete();
```

> Example Response

```json
No response.
```

```xml
No response.
```


### HTTPS Request

`DELETE /message_comments/{id}`

### Authentication Required

Available to all authenticated keys or sessions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
id *int64* **Required** | Message Comment ID. 

