# Usage Snapshots

The UsageSnapshots resource in the REST API allows you to operate on UsageSnapshots.

## The UsageSnapshot object

> Example UsageSnapshot Object

```json
{
  "id": 1,
  "start_at": "2000-01-01T01:00:00Z",
  "end_at": "2000-01-01T01:00:00Z",
  "created_at": "2000-01-01T01:00:00Z",
  "current_storage": "",
  "high_water_storage": "",
  "total_downloads": 1,
  "total_uploads": 1,
  "updated_at": "2000-01-01T01:00:00Z",
  "usage_by_top_level_dir": "",
  "root_storage": "",
  "deleted_files_counted_in_minimum": "",
  "deleted_files_storage": ""
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<usage-snapshot>
  <id type="integer">1</id>
  <start_at>2000-01-01T01:00:00Z</start_at>
  <end_at>2000-01-01T01:00:00Z</end_at>
  <created_at>2000-01-01T01:00:00Z</created_at>
  <current_storage></current_storage>
  <high_water_storage></high_water_storage>
  <total_downloads type="integer">1</total_downloads>
  <total_uploads type="integer">1</total_uploads>
  <updated_at>2000-01-01T01:00:00Z</updated_at>
  <usage_by_top_level_dir></usage_by_top_level_dir>
  <root_storage></root_storage>
  <deleted_files_counted_in_minimum></deleted_files_counted_in_minimum>
  <deleted_files_storage></deleted_files_storage>
</usage-snapshot>

```

Attribute | Description
--------- | -----------
  id *int64* | Site usage ID 
  start_at *date-time* | Site usage report start date/time 
  end_at *date-time* | Site usage report end date/time 
  created_at *date-time* | Site usage report created at date/time 
  current_storage *double* | Current site usage as of report 
  high_water_storage *double* | Site usage report highest usage in time period 
  total_downloads *int64* | Number of downloads in report time period 
  total_uploads *int64* | Number of uploads in time period 
  updated_at *date-time* | The last time this site usage report was updated 
  usage_by_top_level_dir *object* | A map of root folders to their total usage 
  root_storage *double* | Usage for root folder 
  deleted_files_counted_in_minimum *double* | Usage for files that are deleted but uploaded within last 30 days 
  deleted_files_storage *double* | Usage for files that are deleted but retained as backups 

## List Usage Snapshots


> Example Request

```shell--json
curl "https://app.files.com/api/rest/v1/usage_snapshots.json?page=1&per_page=1" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl "https://app.files.com/api/rest/v1/usage_snapshots.xml?page=1&per_page=1" \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::UsageSnapshot.list(
  page: 1, 
  per_page: 1
)
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\UsageSnapshot::list(array(
  'page' => 1, 
  'per_page' => 1
));
```

> Example Response

```json
[
  {
    "id": 1,
    "start_at": "2000-01-01T01:00:00Z",
    "end_at": "2000-01-01T01:00:00Z",
    "created_at": "2000-01-01T01:00:00Z",
    "current_storage": "",
    "high_water_storage": "",
    "total_downloads": 1,
    "total_uploads": 1,
    "updated_at": "2000-01-01T01:00:00Z",
    "usage_by_top_level_dir": "",
    "root_storage": "",
    "deleted_files_counted_in_minimum": "",
    "deleted_files_storage": ""
  }
]
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<usage-snapshots type="array">
  <usage-snapshot>
    <id type="integer">1</id>
    <start_at>2000-01-01T01:00:00Z</start_at>
    <end_at>2000-01-01T01:00:00Z</end_at>
    <created_at>2000-01-01T01:00:00Z</created_at>
    <current_storage></current_storage>
    <high_water_storage></high_water_storage>
    <total_downloads type="integer">1</total_downloads>
    <total_uploads type="integer">1</total_uploads>
    <updated_at>2000-01-01T01:00:00Z</updated_at>
    <usage_by_top_level_dir></usage_by_top_level_dir>
    <root_storage></root_storage>
    <deleted_files_counted_in_minimum></deleted_files_counted_in_minimum>
    <deleted_files_storage></deleted_files_storage>
  </usage-snapshot>
</usage-snapshots>

```


### HTTPS Request

`GET /usage_snapshots`

### Authentication Required

Requires either a Site-Wide API key or User API key or session from a User with Site Admin permissions.



### Request Parameters

Parameter | Description
--------- | --------- | -----------
page *int64*  | Current page number. 
per_page *int64*  | Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended). 
action *string*  | Deprecated: If set to `count` returns a count of matching records rather than the records themselves. 
## Get the most recent usage snapshot (usage data for billing purposes) for a Site


> Example Request

```shell--json
curl https://app.files.com/api/rest/v1/site/usage.json \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```shell--xml
curl https://app.files.com/api/rest/v1/site/usage.xml \
  -H 'X-FilesAPI-Key: YOUR_API_KEY'
```

```ruby
Files.api_key = 'YOUR_API_KEY'

Files::Site.get_usage
```

```php
\Files\Files::setApiKey('YOUR_API_KEY');

\Files\Site::getUsage();
```

> Example Response

```json
{
  "id": 1,
  "start_at": "2000-01-01T01:00:00Z",
  "end_at": "2000-01-01T01:00:00Z",
  "created_at": "2000-01-01T01:00:00Z",
  "current_storage": "",
  "high_water_storage": "",
  "total_downloads": 1,
  "total_uploads": 1,
  "updated_at": "2000-01-01T01:00:00Z",
  "usage_by_top_level_dir": "",
  "root_storage": "",
  "deleted_files_counted_in_minimum": "",
  "deleted_files_storage": ""
}
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<usage-snapshot>
  <id type="integer">1</id>
  <start_at>2000-01-01T01:00:00Z</start_at>
  <end_at>2000-01-01T01:00:00Z</end_at>
  <created_at>2000-01-01T01:00:00Z</created_at>
  <current_storage></current_storage>
  <high_water_storage></high_water_storage>
  <total_downloads type="integer">1</total_downloads>
  <total_uploads type="integer">1</total_uploads>
  <updated_at>2000-01-01T01:00:00Z</updated_at>
  <usage_by_top_level_dir></usage_by_top_level_dir>
  <root_storage></root_storage>
  <deleted_files_counted_in_minimum></deleted_files_counted_in_minimum>
  <deleted_files_storage></deleted_files_storage>
</usage-snapshot>

```


### HTTPS Request

`GET /site/usage`

### Authentication Required

Requires either a Site-Wide API key or User API key or session from a User with Site Admin permissions.



